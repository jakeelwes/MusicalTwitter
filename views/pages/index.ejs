<!DOCTYPE html>
<html>
<head>
  <script src="/Tone.min.js"></script>
  <script src="/jquery-2.1.4.min.js"></script>
  <script src="/formatLetters.js"></script>
  <!-- <script src="music.js"></script> -->
  <link rel="stylesheet" type="text/css" href="/style.css">

</head>

<body>

<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script>
  var socket = io.connect('http://musicforadeadcomposer.herokuapp.com:8080');
  // var socket = io.connect('http://localhost:8080');
  socket.on('news', function (data) {
    console.log(data);
    socket.emit('my other event', { my: 'data' });
    var obj = data;
    obj.text = "<p>" + obj.text + "</p>";
    delete obj.retweeted_status;
    delete obj.entities;
    delete obj.source;
    delete obj.extended_entities;
    $("body").prepend("<div style=\"opacity:1\">" + JSON.stringify(obj) + "</div>").fadeIn();


// var dist = new Tone.AutoWah(50, 6, -30).toMaster();
// var autoWah = new Tone.AutoWah(50, 6, -30).connect(dist);
var synth = new Tone.PolySynth(8, Tone.SimpleSynth, {
			"oscillator" : {
				"partials" : [Math.random(), Math.random(), Math.random(), Math.random()/2, Math.random()/3,Math.random()/3.5,Math.random()/4],
			}
		}).toMaster();
// var synth = new Tone.SimpleSynth().connect(dist);

//  Scale
// 1 for Minor/Diminished
// 2 for Pentatonic
// 3 for Major
// 4 for Chromatic

var scale = 4; //(Math.floor((Math.random() * 4) + 1));

var sequence = JSON.stringify(obj.text + JSON.stringify(obj)); //obj or obj.text, tweet or raw JSON
// hi = ["Gb7", "G8"];
var seq = new Tone.Sequence(function(time, note){
  synth.triggerAttackRelease(note, "2n", time);
//subdivisions are given as subarrays
}, noteify(sequence, scale));

console.log(sequence);
console.log(noteify(sequence, scale));

seq.start();
seq.loop = 1;
Tone.Transport.bpm.value = (Math.floor((Math.random() * 900) + 90));
Tone.Transport.start();
Tone.Master.volume.value = -14;

});

</script>


</body>
</html>
